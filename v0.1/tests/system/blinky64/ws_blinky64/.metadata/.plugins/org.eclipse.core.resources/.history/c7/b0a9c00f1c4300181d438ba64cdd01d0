#include "system.c"

#define CYCLE 100
#define OFFSET 100 / 10

void gpio0(unsigned tag, int start_time) {
	if (start_time >= 0) {
		TC_START = 0xc0000000 + (tag << 14) + (((unsigned)&&gpio0_label >> 1) & 0x3ff);
	} else
	{
		int t, pwm, dir;
		gpio0_label:
			GPIO_0_OUT_SET = 0x1 << tag;
			GPIO_0_OUT_CLR = 0x1 << tag;
			t = 0;
			dir = 1;
			pwm = OFFSET * tag;
		    while (1) {
		    	if (t == pwm)
		    		GPIO_0_OUT_SET = 0x1 << tag;
		    	if (t == CYCLE) {
		    		GPIO_0_OUT_CLR = 0x1 << tag;
		    		if (pwm == CYCLE)
			    		dir = -1;
		    		else if (pwm == 0)
			    		dir = 1;
		    		pwm += dir;
		    		t = 0;
		    	} else
		    		t += 1;
			};
			TC_KILL = 0x0;
			asm volatile ("addi x0, x0, 0");
	}
}

int main(void)
{
	GPIO_0_DIR_SET = 0xff;

	int CT = CA_CT;
	gpio0(0x0, CT);
	gpio0(0x1, CT);
	gpio0(0x7, -1);

    TC_KILL = 0x0;
    asm volatile ("addi x0, x0, 0");

}
